[{"C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\index.js":"1","C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\App.js":"2","C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\components\\Form.js":"3","C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\components\\Table.js":"4"},{"size":199,"mtime":1619117045432,"results":"5","hashOfConfig":"6"},{"size":694,"mtime":1619137128911,"results":"7","hashOfConfig":"6"},{"size":1360,"mtime":1619137149002,"results":"8","hashOfConfig":"6"},{"size":2491,"mtime":1619136998393,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1n7aj34",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\index.js",[],["20","21"],"C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\App.js",[],"C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\components\\Form.js",["22","23"],"C:\\Users\\Miguel\\OneDrive\\Escritorio\\crud react\\crud-react\\src\\components\\Table.js",["24"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst Table = ({newPersona, setPage, page}) => {\r\n\r\n    useEffect(()=>{\r\n        getPersona();\r\n        setPage([false])\r\n    },[page]);\r\n\r\n    const [persona, setPersona] = useState ([]);\r\n\r\n    const getPersona = async () =>{\r\n        let save = await fetch('http://localhost:9000/api');\r\n        let data = await save.json();\r\n        setPersona(data)\r\n    };\r\n\r\n    const handleDelete = id =>{\r\n        const requestInit = {\r\n            method: 'DELETE'\r\n        };\r\n        fetch(`http://localhost:9000/api/${id}`, requestInit)\r\n        .then(res=> res.text())\r\n        setPage(true)\r\n    }\r\n    \r\n    let {nombre, apellido, edad} = newPersona;\r\n\r\n    const handleUpdate = (id) =>{\r\n        edad = parseInt(edad, 200);\r\n        if (nombre === ''|| apellido === '' || edad <= 0) {\r\n            alert('los campos estan vacios');\r\n        }\r\n        const requestInit = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(newPersona)\r\n        };\r\n        fetch(`http://localhost:9000/api/${id}`, requestInit)\r\n        .then(res=> res.text())\r\n\r\n        setPage(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tablaDatos\">\r\n           <table>\r\n\t\t\t<thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>NOMBRE</th>\r\n                    <th>APELLIDO</th>\r\n                    <th>EDAD</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    persona.map( persona =>(\r\n                        <tr>\r\n                            <th>{persona.id}</th>\r\n                            <th>{persona.nombre}</th>\r\n                            <th>{persona.apellido}</th>\r\n                            <th>{persona.edad}</th>\r\n                            <th>\r\n                                <div>\r\n                                    <button onClick={()=>handleDelete(persona.id)}>DELETE</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>\r\n                                <div>\r\n                                    <button onClick={()=>handleUpdate(persona.id)}>UPDATE</button>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n\t\t</table> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":2,"message":"30","line":27,"column":9,"nodeType":"31","messageId":"32","endLine":27,"endColumn":13},{"ruleId":"33","severity":2,"message":"34","line":27,"column":9,"nodeType":"35","messageId":"36","endLine":27,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":8,"column":7,"nodeType":"39","endLine":8,"endColumn":13,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'winw' is not defined.","Identifier","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPage'. Either include it or remove the dependency array. If 'setPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["43"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [page, setPage]",{"range":"46","text":"47"},[183,189],"[page, setPage]"]